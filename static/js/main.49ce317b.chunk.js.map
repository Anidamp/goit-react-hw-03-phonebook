{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["module","exports","ContactForm","addNewContact","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","className","s","form","onSubmit","preventDefault","contact","id","uuidv4","input","onChange","type","pattern","title","required","button","ContactList","contacts","handleDelContact","list","map","item","btn","onClick","Filter","filter","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","defaultContacts","App","setContacts","setFilter","obj","some","prev","alert","normalizedFilter","toLowerCase","includes","getFilteredContacts","filteredItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49ce317b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__30C5m\",\"button\":\"ContactForm_button__Lmyj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2j9bO\",\"item\":\"ContactsList_item__1MEm1\",\"btn\":\"ContactsList_btn__1gj5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__xyK0A\"};","import { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nexport default function ContactForm ({ addNewContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case'name' :\n       setName(value);\n       break;\n      case 'number':\n        setNumber(value);\n        break;\n      default: \n      return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n    addNewContact(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('')\n  };\n\n  return (\n        <form className={s.form} onSubmit={handleSubmit}>\n          <label>\n            Name\n            <input\n              className={s.input}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              className={s.input}\n              onChange={handleChange}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n    );\n}\n\nContactForm.propTypes = {\n  addNewContact: PropTypes.func.isRequired,\n};","import s from './ContactsList.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ContactList ({ contacts, handleDelContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({id, name, number,}) =>\n        <li key={id} className={s.item}>\n          <p>{name}</p>\n          <p>{number}</p>\n          <button  className={s.btn} type='button' onClick={() => handleDelContact(id)}>X</button>\n        </li>)}\n    </ul>\n  )\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  handleDelContact: PropTypes.func.isRequired,\n};\n","import s from './Filter.module.css';\n\nexport default function Filter({ filter, onChange }) {\n  return (\n    <label>\n      Find contacts by name:\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n}","import { useState, useEffect } from 'react';\r\n\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;","import './App.css';\nimport { useState } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nconst defaultContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default function App () {\n  const [contacts, setContacts] = useLocalStorage('contacts', defaultContacts);\n  const [filter, setFilter] = useState('');\n\n  \n\n  const addNewContact = obj => {\n    const { name } =obj;\n    if (contacts.some(({ name }) => name ===obj.name)) {\n      alert(`Sorry, ${name} is already in contacts list`);\n      return;\n    }\n    return(\n      setContacts(prev => [...prev,obj])\n    );\n  };\n\n  const handleDelContact = id => {\n    const filteredItem = contacts.filter(contact => contact.id !== id);\n    setContacts(filteredItem);\n  };\n\n  const onChangeFilter = e => {\n    setFilter(e.target.value );\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  return (\n      <div className=\"App\">\n        <h2>Phonebook</h2>\n        <ContactForm addNewContact={addNewContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={onChangeFilter} />\n        <ContactsList contacts={getFilteredContacts()} handleDelContact={handleDelContact} />\n      </div>\n\n  );\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}