{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","addNewContact","reset","this","className","s","form","onSubmit","input","onChange","type","pattern","title","required","button","Component","ContactList","contacts","handleDelContact","list","map","item","btn","onClick","Filter","filter","App","obj","some","alert","contactId","prevState","onChangeFilter","target","getFilteredContacts","normalizedFilter","toLowerCase","includes","data","localStorage","getItem","parsedData","JSON","parse","prevPropos","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,OAAS,8B,oBCA9DD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,KAAO,2BAA2B,IAAM,4B,mBCA5FD,EAAOC,QAAU,CAAC,MAAQ,wB,6MCGLC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,MAAyB,EAAKT,MACxBU,EAAU,CACdT,KAFF,EAAQA,KAGNC,OAHF,EAAcA,OAIZS,GAAIC,eAEN,EAAKL,SAAS,CAAEG,YAChB,EAAKG,MAAMC,cAAcJ,GACzB,EAAKK,S,EAGPA,MAAQ,WACN,EAAKR,SAAS,CACdN,KAAM,GACNC,OAAQ,M,4CAGV,WACE,MAAyBc,KAAKhB,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACNM,EAA+BQ,KAA/BR,aAAcL,EAAiBa,KAAjBb,aACtB,OACE,8BACE,uBAAMc,UAAWC,IAAEC,KAAMC,SAAUZ,EAAnC,UACE,yCAEE,uBACES,UAAWC,IAAEG,MACbC,SAAUnB,EACVoB,KAAK,OACLtB,KAAK,OACLK,MAAOL,EACPuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACET,UAAWC,IAAEG,MACbC,SAAUnB,EACVoB,KAAK,MACLtB,KAAK,SACLK,MAAOJ,EACPsB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQH,KAAK,SAASN,UAAWC,IAAES,OAAnC,kC,GA9D+BC,a,gBCD1B,SAASC,EAAT,GAAuD,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,iBAC/C,OACE,oBAAId,UAAWC,IAAEc,KAAjB,SACGF,EAASG,KAAI,gBAAEtB,EAAF,EAAEA,GAAIV,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,OAAZ,OACZ,qBAAae,UAAWC,IAAEgB,KAA1B,UACE,4BAAIjC,IACJ,4BAAIC,IACJ,wBAASe,UAAWC,IAAEiB,IAAKZ,KAAK,SAASa,QAAS,kBAAML,EAAiBpB,IAAzE,iBAHOA,Q,qBCLF,SAAS0B,EAAT,GAAuC,IAArBC,EAAoB,EAApBA,OAAQhB,EAAY,EAAZA,SACvC,OACE,2DAEE,uBACEL,UAAWC,IAAEG,MACbE,KAAK,OACLtB,KAAK,SACLK,MAAOgC,EACPhB,SAAUA,O,ICLGiB,E,4MACnBvC,MAAQ,CACN8B,SAAU,CACR,CAAEnB,GAAI,OAAQV,KAAM,gBAAiBC,OAAQ,aAC7C,CAAES,GAAI,OAAQV,KAAM,iBAAkBC,OAAQ,aAC9C,CAAES,GAAI,OAAQV,KAAM,gBAAiBC,OAAQ,aAC7C,CAAES,GAAI,OAAQV,KAAM,iBAAkBC,OAAQ,cAEhDoC,OAAQ,GACRrC,KAAM,GACNC,OAAQ,I,EAiBVY,cAAe,SAAA0B,GACb,IAAQV,EAAa,EAAK9B,MAAlB8B,SACA7B,EAAQuC,EAARvC,KACJ6B,EAASW,MAAK,qBAAGxC,OAAmBuC,EAAIvC,QAC1CyC,MAAM,UAAD,OAAWzC,EAAX,iCAGP,EAAKM,UAAS,YAAmB,IAAhBuB,EAAe,EAAfA,SACf,MAAO,CACLA,SAAS,GAAD,mBAAMA,GAAN,CAAgBU,S,EAK9BT,iBAAmB,SAAAY,GACjB,EAAKpC,UAAS,SAAAqC,GAAS,MAAK,CAC1Bd,SAAUc,EAAUd,SAASQ,QAAO,SAAA5B,GAAO,OAAIA,EAAQC,KAAOgC,U,EAIlEE,eAAiB,SAAAzC,GACf,EAAKG,SAAS,CAAE+B,OAAQlC,EAAE0C,OAAOxC,S,EAEnCyC,oBAAsB,WACpB,MAA6B,EAAK/C,MAA1B8B,EAAR,EAAQA,SACFkB,EADN,EAAkBV,OACcW,cAEhC,OAAOnB,EAASQ,QAAO,SAAA5B,GAAO,OAC5BA,EAAQT,KAAKgD,cAAcC,SAASF,O,uDA1CxC,WACE,IAAMG,EAAOC,aAAaC,QAAQ,YAC5BC,EAAaC,KAAKC,MAAML,GAC1BG,GACFtC,KAAKT,SAAS,CAACuB,SAAUwB,M,gCAI7B,SAAmBV,EAAWa,GACzBb,EAAUd,WAAad,KAAKhB,MAAM8B,UACnCsB,aAAaM,QAAQ,WAAYH,KAAKI,UAAU3C,KAAKhB,MAAM8B,a,oBAmC/D,WACE,IAAQQ,EAAWtB,KAAKhB,MAAhBsC,OACAP,EAAoDf,KAApDe,iBAAkBjB,EAAkCE,KAAlCF,cAAe+B,EAAmB7B,KAAnB6B,eACnCe,EAAkB5C,KAAK+B,sBAC7B,OACE,sBAAK9B,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAaH,cAAeA,IAC5B,0CACA,cAACuB,EAAD,CAAQC,OAAQA,EAAQhB,SAAUuB,IAClC,cAAC,EAAD,CAAcf,SAAU8B,EAAiB7B,iBAAkBA,W,GApElCH,aCDjCiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.623a4a9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__FUNNG\",\"button\":\"ContactForm_button__26m3I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2iJJd\",\"item\":\"ContactsList_item__2wdxI\",\"btn\":\"ContactsList_btn__ZWTTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2gR2p\"};","import { Component } from 'react';\nimport s from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n    this.setState({ contact });\n    this.props.addNewContact(contact);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ \n    name: '',\n    number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleChange } = this;\n    return (\n      <div>\n        <form className={s.form} onSubmit={handleSubmit}>\n          <label>\n            Name\n            <input\n              className={s.input}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <input\n              className={s.input}\n              onChange={handleChange}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}","import s from './ContactsList.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ContactList ({ contacts, handleDelContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({id, name, number,}) =>\n        <li key={id} className={s.item}>\n          <p>{name}</p>\n          <p>{number}</p>\n          <button  className={s.btn} type='button' onClick={() => handleDelContact(id)}>X</button>\n        </li>)}\n    </ul>\n  )\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  handleDelContact: PropTypes.func.isRequired,\n};\n","import s from './Filter.module.css';\n\nexport default function Filter({ filter, onChange }) {\n  return (\n    <label>\n      Find contacts by name:\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n}","import './App.css';\nimport { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n  \n  componentDidMount() {\n    const data = localStorage.getItem('contacts');\n    const parsedData = JSON.parse(data);\n    if (parsedData) {\n      this.setState({contacts: parsedData})\n    };\n  }\n\n  componentDidUpdate(prevState, prevPropos) {\n    if(prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addNewContact =obj => {\n    const { contacts } = this.state;\n    const { name } =obj;\n    if (contacts.some(({ name }) => name ===obj.name)) {\n      alert(`Sorry, ${name} is already in contacts list`);\n      return;\n    }\n    this.setState(({ contacts }) => {\n      return {\n        contacts: [...contacts, obj],\n      };\n    });\n  };\n\n  handleDelContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  onChangeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  render() {\n    const { filter } = this.state;\n    const { handleDelContact, addNewContact, onChangeFilter } = this;\n    const visibleContacts = this.getFilteredContacts();\n    return (\n      <div className=\"App\">\n        <h2>Phonebook</h2>\n        <ContactForm addNewContact={addNewContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={onChangeFilter} />\n        <ContactsList contacts={visibleContacts} handleDelContact={handleDelContact} />\n      </div>\n    );\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}